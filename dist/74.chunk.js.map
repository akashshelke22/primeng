{"version":3,"sources":["webpack:///./src/app/components/codehighlighter/codehighlighter.ts?0976*************************************************************************","webpack:///./src/app/showcase/components/menumodel/menumodeldemo-routing.module.ts","webpack:///./src/app/showcase/components/menumodel/menumodeldemo.html","webpack:///./src/app/showcase/components/menumodel/menumodeldemo.module.ts","webpack:///./src/app/showcase/components/menumodel/menumodeldemo.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAmE;AACtB;AAO7C,IAAa,eAAe;IAExB,yBAAmB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;IAAG,CAAC;IAErC,kCAAQ,GAAR;QACI,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAClD,CAAC;IACL,sBAAC;AAAD,CAAC;AAPY,eAAe;IAH3B,uFAAS,CAAC;QACP,QAAQ,EAAE,SAAS;KACtB,CAAC;yDAGyB,iEAAU,oBAAV,iEAAU;GAFxB,eAAe,CAO3B;AAP2B;AAc5B,IAAa,qBAAqB;IAAlC;IAAqC,CAAC;IAAD,4BAAC;AAAD,CAAC;AAAzB,qBAAqB;IALjC,sFAAQ,CAAC;QACN,OAAO,EAAE,CAAC,qEAAY,CAAC;QACvB,OAAO,EAAE,CAAC,eAAe,CAAC;QAC1B,YAAY,EAAE,CAAC,eAAe,CAAC;KAClC,CAAC;GACW,qBAAqB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;ACtBS;AACC;AACE;AAY9C,IAAa,0BAA0B;IAAvC;IAAyC,CAAC;IAAD,iCAAC;AAAD,CAAC;AAA7B,0BAA0B;IAVtC,sFAAQ,CAAC;QACT,OAAO,EAAE;YACR,qEAAY,CAAC,QAAQ,CAAC;gBACrB,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAE,qEAAa,EAAC;aAClC,CAAC;SACF;QACD,OAAO,EAAE;YACR,qEAAY;SACZ;KACD,CAAC;GACW,0BAA0B,CAAG;AAAH;;;;;;;;ACdvC,moBAAmoB,4BAA4B,IAAI,WAAW,+GAA+G,yBAAyB,wBAAwB,8HAA8H,0CAA0C,6BAA6B,gCAAgC,gFAAgF,mCAAmC,2BAA2B,wCAAwC,mCAAmC,mBAAmB,gFAAgF,uCAAuC,2BAA2B,sCAAsC,mCAAmC,EAAE,cAAc,UAAU,q6IAAq6I,0CAA0C,6BAA6B,gCAAgC,gFAAgF,yDAAyD,yIAAyI,mCAAmC,cAAc,UAAU,8cAA8c,0CAA0C,6BAA6B,gCAAgC,gFAAgF,6EAA6E,2BAA2B,mEAAmE,mCAAmC,cAAc,UAAU,wC;;;;;;;;;;;;;;;;;;;;;ACA7qO;AACE;AACC;AAC4B;AACgB;AAY1F,IAAa,mBAAmB;IAAhC;IAAkC,CAAC;IAAD,0BAAC;AAAD,CAAC;AAAtB,mBAAmB;IAV/B,sFAAQ,CAAC;QACT,OAAO,EAAE;YACR,qEAAY;YACZ,iGAA0B;YACpB,0GAAqB;SAC3B;QACD,YAAY,EAAE;YACb,qEAAa;SACb;KACD,CAAC;GACW,mBAAmB,CAAG;AAAH;;;;;;;;;;;;;;;;;AChBQ;AAKxC,IAAa,aAAa;IAA1B;IAEA;IAAA;AAAA;AAFa,aAAa;IAHzB,uFAAS,CAAC;QACP,2FAAmC;KACtC,CAAC;GACW,aAAa,CAE1B;AAF0B","file":"74.chunk.js","sourcesContent":["import {NgModule,Directive,ElementRef,OnInit} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\ndeclare var Prism: any;\r\n\r\n@Directive({\r\n    selector: '[pCode]'\r\n})\r\nexport class CodeHighlighter implements OnInit {\r\n        \r\n    constructor(public el: ElementRef) {}\r\n    \r\n    ngOnInit() {\r\n        Prism.highlightElement(this.el.nativeElement);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [CodeHighlighter],\r\n    declarations: [CodeHighlighter]\r\n})\r\nexport class CodeHighlighterModule { }\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/codehighlighter/codehighlighter.ts","import {NgModule}     from '@angular/core';\r\nimport {RouterModule} from '@angular/router'\r\nimport {MenuModelDemo} from './menumodeldemo';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tRouterModule.forChild([\r\n\t\t\t{path:'',component: MenuModelDemo}\r\n\t\t])\r\n\t],\r\n\texports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class MenuModelDemoRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/menumodel/menumodeldemo-routing.module.ts","module.exports = \"<div class=\\\"content-section introduction\\\">\\r\\n    <div>\\r\\n        <span class=\\\"feature-title\\\">MenuModel API</span>\\r\\n        <span>PrimeNG menus components share a common api to specify the menuitems and submenus.</span>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"content-section documentation\\\">\\r\\n    <h3 class=\\\"first\\\">MenuItem</h3>\\r\\n    <p>Core of the api is MenuItem class that defines various options such as the label, icon and children of an item in a menu. Example below\\r\\n    is a sample configuration with Menu component.</p>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-markup\\\" pCode ngNonBindable>\\r\\n&lt;p-menu [model]=\\\"items\\\"&gt;&lt;/p-menu&gt;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nimport &#123;MenuModule,MenuItem&#125; from 'primeng/primeng';\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class MenuDemo &#123;\\r\\n    \\r\\n    private items: MenuItem[];\\r\\n\\r\\n    ngOnInit() &#123;\\r\\n        this.items = [&#123;\\r\\n            label: 'File',\\r\\n            items: [\\r\\n                &#123;label: 'New', icon: 'fa-plus'&#125;,\\r\\n                &#123;label: 'Open', icon: 'fa-download'&#125;\\r\\n            ]\\r\\n        &#125;,\\r\\n        &#123;\\r\\n            label: 'Edit',\\r\\n            items: [\\r\\n                &#123;label: 'Undo', icon: 'fa-refresh'&#125;,\\r\\n                &#123;label: 'Redo', icon: 'fa-repeat'&#125;\\r\\n            ]\\r\\n        &#125;];\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n    <p>MenuItem provides the following properties. Note that not all of them may be utilized by the menu component.</p>\\r\\n    <div class=\\\"doc-tablewrapper\\\">\\r\\n        <table class=\\\"doc-table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th>Name</th>\\r\\n                    <th>Type</th>\\r\\n                    <th>Default</th>\\r\\n                    <th>Description</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr>\\r\\n                    <td>label</td>\\r\\n                    <td>string</td>\\r\\n                    <td>null</td>\\r\\n                    <td>Text of the item.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>icon</td>\\r\\n                    <td>string</td>\\r\\n                    <td>null</td>\\r\\n                    <td>Icon of the item.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>command</td>\\r\\n                    <td>function</td>\\r\\n                    <td>null</td>\\r\\n                    <td>Callback to execute when item is clicked.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>url</td>\\r\\n                    <td>string</td>\\r\\n                    <td>null</td>\\r\\n                    <td>External link to navigate when item is clicked.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>routerLink</td>\\r\\n                    <td>array</td>\\r\\n                    <td>null</td>\\r\\n                    <td>RouterLink definition for internal navigation.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>routerLinkActiveOptions</td>\\r\\n                    <td>object</td>\\r\\n                    <td>null</td>\\r\\n                    <td>Configuration for active router link.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>items</td>\\r\\n                    <td>array</td>\\r\\n                    <td>null</td>\\r\\n                    <td>An array of children menuitems.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>expanded</td>\\r\\n                    <td>boolean</td>\\r\\n                    <td>false</td>\\r\\n                    <td>Visibility of submenu.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>disabled</td>\\r\\n                    <td>boolean</td>\\r\\n                    <td>false</td>\\r\\n                    <td>When set as true, disables the menuitem.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>visible</td>\\r\\n                    <td>boolean</td>\\r\\n                    <td>true</td>\\r\\n                    <td>Whether the dom element of menuitem is created or not.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>target</td>\\r\\n                    <td>string</td>\\r\\n                    <td>null</td>\\r\\n                    <td>Specifies where to open the linked document.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>separator</td>\\r\\n                    <td>boolean</td>\\r\\n                    <td>false</td>\\r\\n                    <td>Defines the item as a separator.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>style</td>\\r\\n                    <td>object</td>\\r\\n                    <td>null</td>\\r\\n                    <td>Inline style of the menuitem.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>styleClass</td>\\r\\n                    <td>string</td>\\r\\n                    <td>null</td>\\r\\n                    <td>Style class of the menuitem.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>badge</td>\\r\\n                    <td>string</td>\\r\\n                    <td>null</td>\\r\\n                    <td>Value of the badge.</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>badgeStyleClass</td>\\r\\n                    <td>string</td>\\r\\n                    <td>null</td>\\r\\n                    <td>Style class of the badge.</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n    \\r\\n    <h4>Command</h4>\\r\\n    <p>The function to invoke when an item is clicked is defined using the command property.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class MenuDemo &#123;\\r\\n    \\r\\n    private items: MenuItem[];\\r\\n\\r\\n    ngOnInit() &#123;\\r\\n        this.items = [&#123;\\r\\n            label: 'File',\\r\\n            items: [\\r\\n                &#123;label: 'New', icon: 'fa-plus', command: (event) => &#123;\\r\\n                    //event.originalEvent: Browser event\\r\\n                    //event.item: menuitem metadata\\r\\n                }}\\r\\n            ]\\r\\n        &#125;\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n    <h4>Navigation</h4>\\r\\n    <p>Navigation is specified using url property for external links and with routerLink for internal ones. If a menuitem has an active route, <i>ui-state-active</i> style class is added as an indicator. Active route link can be\\r\\n    configured with routerLinkActiveOptions property of MenuItem API.</p>\\r\\n<pre>\\r\\n<code class=\\\"language-typescript\\\" pCode ngNonBindable>\\r\\nexport class MenuDemo &#123;\\r\\n    \\r\\n    private items: MenuItem[];\\r\\n\\r\\n    ngOnInit() &#123;\\r\\n        this.items = [&#123;\\r\\n            label: 'File',\\r\\n            items: [\\r\\n                &#123;label: 'New', icon: 'fa-plus', url: 'http://www.primefaces.org/primeng'&#125;,\\r\\n                &#123;label: 'Open', icon: 'fa-download', routerLink: ['/pagename']&#125;\\r\\n            ]\\r\\n        &#125;\\r\\n    &#125;\\r\\n&#125;\\r\\n</code>\\r\\n</pre>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/showcase/components/menumodel/menumodeldemo.html\n// module id = ./src/app/showcase/components/menumodel/menumodeldemo.html\n// module chunks = 74","import {NgModule}     from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MenuModelDemo} from './menumodeldemo';\r\nimport {MenuModelDemoRoutingModule} from './menumodeldemo-routing.module';\r\nimport {CodeHighlighterModule} from '../../../components/codehighlighter/codehighlighter';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tMenuModelDemoRoutingModule,\r\n        CodeHighlighterModule\r\n\t],\r\n\tdeclarations: [\r\n\t\tMenuModelDemo\r\n\t]\r\n})\r\nexport class MenuModelDemoModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/menumodel/menumodeldemo.module.ts","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './menumodeldemo.html'\r\n})\r\nexport class MenuModelDemo {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/showcase/components/menumodel/menumodeldemo.ts"],"sourceRoot":""}